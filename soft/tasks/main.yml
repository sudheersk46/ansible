


- name: copying file
  copy: src="{{ item }}"  dest=/tmp/
  ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
  with_fileglob:
    - "/home/soft/files/*"
  tags: copy_files

- name: copying director
  copy: src=chrome  dest=/tmp/chrome 
  ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
#  with_fileglob:
#    - "/home/soft/files/*"
  tags: copy_dir

- name: synchronize director
  synchronize: 
        src: chrome  
        dest: /tmp 
        recursive: yes
  ignore_errors: yes
  
#  archive: yes
#  rsync_opts
#  rsync_path
#  set_remote_user
#  with_fileglob:
#    - "/home/soft/files/*"
  tags: sync_dir



- name: copying notepad
  block: 
  - name: mkdir
    shell: mkdir -p /tmp/softs
  - name: install notepad
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home//tets/roles/soft/files/notepad/*"
    register: copyf
  
  - name: installing notepad
    shell: | 
             dpkg -i /tmp/softs/notepadqq-common_1.2.0-1~trusty1_all.deb   
             dpkg -i /tmp/softs/notepadqq_1.2.0-1~trusty1_amd64.deb
             apt-get install -f -y


  - name: del files
    shell: rm -rf /tmp/softs
    when: copyf.changed 
  tags: notepad  
  
- name: copying chrome
  block: 
  - name: mkdir
    shell: mkdir -p /tmp/softs
  - name: install chrome
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home//tets/roles/soft/files/chrome/*"
    register: chromef
  
  - name: installing chrome
    shell: |  
             dpkg -i /tmp/softs/google-chrome* 
             apt-get install -f -y 
  - name: del files
    shell: rm -rf /tmp/softs
    when: chromef.changed 
  tags: chrome   

  
- name: copying citrix
  block: 
  - name: mkdir
    shell: mkdir -p /tmp/softs
  - name: install citrix
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home//tets/roles/soft/files/citrix/*"
    register: citrixf
  
  - name: installing citrix
    shell: |  
             dpkg -i /tmp/softs/icaclient_13.10.0.20_amd64.deb
             apt-get install -f  -y
             bash /tmp/citrix1
             bash /tmp/citrix
  - name: del files
    shell: rm -rf /tmp/softs
    when: citrixf.changed 
  tags: citrix

- name: copying horizon
  block: 
  - name: mkdir
    shell: mkdir -p /tmp/softs
  - name: install horizon
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/tets/roles/soft/files/VMware-Horizon-Client-4.6.0-6617224.x64.bundle"
    register: horizonf
  
  - name: installing horizon
    shell: |  
             sh '/tmp/VMware-Horizon-Client-4.6.0-6617224.x64.bundle' --console --eulas-agreed --required
             
  - name: del files
    shell: rm -rf /tmp/softs
    when: horizonf.changed 
  tags: horizon

- name: copying dbeaver
  block: 
  - name: mkdir
    shell: mkdir -p /tmp/softs
  - name: install dbeaver
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/files/dbeaver/*"
    register: dbeaverf
  
  - name: installing dbeaver
    shell: |  
             dpkg -i /tmp/softs/*
             apt-get install -f
             
  - name: del files
    shell: rm -rf /tmp/softs
    when: dbeaverf.changed 
  tags: dbeaver


- name: install mcafee
  block: 
  - name: checking mcafee on ubuntu 16|18
    shell: service ma status | grep Active | awk '{print $2}'
    ignore_errors: yes
    register: mcafee_status
  - name: checking mcafee on ubunt 14
    shell: service ma status | grep -i mcafee | awk '{print $1,$2,$3}' | head -n 1
    ignore_errors: yes
    register: mcafee1_status

  - debug: msg="{{ mcafee_status.stdout ,mcafee1_status.stdout  }}"
    when: mcafee_status.stdout=="" and mcafee1_status.stdout==""
  - debug: msg="mcafee is  already installed"
    when: mcafee_status.stdout=="active" or mcafee_status.stdout=="inactive" or mcafee1_status.stdout=="McAfee agent service"


  - name: mkdir
    shell: mkdir -p /tmp/softs
    when: mcafee_status.stdout=="" and mcafee1_status.stdout==""
  - name: copying mcafee
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/tets/roles/soft/files/mcafee/*"
    register: mcafeef
    when: mcafee_status.stdout=="" and mcafee1_status.stdout==""

  - name: installing mcafee
    shell: bash /tmp/softs/* -i 
    ignore_errors: yes
    when: mcafeef.changed         
  - name: del files
    shell: rm -rf /tmp/softs
    when: mcafeef.changed 
  tags: mcafee
  
  
  ###checck output of sssd to nw ssd file 
  
  - name: domain_rejoin
  block: 
  - name: check output
    shell: " ping -c 2 google.com "
    ignore_errors: yes
    register: outs
  - fail: msg="internet authentication  failure"
    when: outs.rc == 2
  - debug: msg="internet authentication  success"
    when: outs.rc == 0
  - name: checking sssdconf
    shell: cat /etc/sssd/sssd.conf
    ignore_errors: yes
    register: sssd_status
  - debug: msg="{{ sssd_status.stdout }}"
#    when: mcafee_status.stdout==""
#  - debug: msg="mcafee is  already installed"
#    when: mcafee_status.stdout=="active" or mcafee_status.stdout=="inactive" 
  - name: updating packages
    apt:  
      update_cache: yes 
      cache_valid_time: 600
#    ignore_errors: yes
    register: update_status
#  - debug: msg="{{ update_status.stdout }}"
#    failed_when: "'FAILED' in update_status.stderr"
    

  - name: Install a list of packages
    apt: name="{{ packages }}" state=present
    vars:
      packages:
       - realmd
       - sssd
       - sssd-tools
       - samba-common
       - krb5-user
       - packagekit
       - samba-common-bin
       - samba-libs
       - adcli
       - ntp
       - libpam-sss
       - libnss-sss

       
#    register: install_status
#  - debug: msg="{{ install_status.stdout }}"
#    failed_when: "'FAILED' in install_status.stderr"

#  - name: Install a list of packages
#    apt: name={{ item }} state=present
#    with_items:
#       - openssh-server
#       - net-tools
#    register: install_status
#  - debug: msg="{{ install_status.stdout }}"
#    failed_when: "'FAILED' in install_status.stderr" ## get failed when cidition fails
##stop play with 
#- hosts: somehosts
#  any_errors_fatal: true
#  roles:
#    - myrole
##when condition changed_when, failed_when, any_errors_fatal 

  - name: mkdir
    shell: mkdir -p /tmp/softs
#    when: mcafee_status.stdout==""
  - name: copying domain_script
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/tets/roles/soft/files/domain/*"
    register: domainf
#    when: domain_rejoin_status.stdout==""
  
  - name: installing sssd rejoin
    shell: bash /tmp/softs/domain_rejoin 
    ignore_errors: yes
    when: domainf.changed         
  - name: del files
    shell: rm -rf /tmp/softs
    when: domainf.changed 
  - name: checking sssdrejoinconf
    shell: cat /etc/sssd/sssd.conf
    ignore_errors: yes
    register: sssd1_status
  - debug: msg="new sssd status is {{ sssd1_status.stdout }}"
  - debug: msg="{{ sssd1_status.stdout }}"
  - debug: msg=" domain_rejoined_correctly "
    when: sssd_status.stdout == sssd1_status.stdout
  - debug: msg=" domain_need_to_rejoined_correctly "
    when: sssd_status.stdout != sssd1_status.stdout

  tags: domain_rejoin
  
  - name: node_exporter
  block: 
#  - name: checking sssdconf
#    shell: cat /etc/sssd/sssd.conf
#    ignore_errors: yes
#    register: sssd_status
#  - debug: msg="{{ sssd_status.stdout }}"
#    when: mcafee_status.stdout==""
#  - debug: msg="mcafee is  already installed"
#    when: mcafee_status.stdout=="active" or mcafee_status.stdout=="inactive" 


  - name: mkdir
    shell: mkdir -p /tmp/softs
#    when: mcafee_status.stdout==""
  - name: copying node_script
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/tets/roles/soft/files/node_exporter/node_exporter"
    when: ansible_facts['system'] == "Linux"
    register: nodef1

  - name: copying node_exporter
    copy: src="{{ item }}"  dest=/tmp/softs
    ignore_errors: yes
#  with_items:
#   - SoapUI-x64-5.4.0.sh
#   - App*
    with_fileglob:
     - "/home/tets/roles/soft/files/node_exporter/wmi_exporter.msi"
    when: ansible_facts['system'] == "Win32NT"
    register: nodef2
#    when: domain_rejoin_status.stdout==""
  
  - name: installing node windwos install
    win_command: msiexec /i  /tmp/softs/wmi_exporter.msi  ENABLED_COLLECTORS=os,service LISTEN_PORT=5000
    ignore_errors: yes
    when: nodef2.changed 
  - name: installing node linux install
    shell: bash /tmp/softs/node_exporter &
    ignore_errors: yes
    when: nodef1.changed 
  - name: del files
    shell: rm -rf /tmp/softs
    when: nodef1.changed or nodef2.changed
#  - name: checking sssdrejoinconf
#    shell: cat /etc/sssd/sssd.conf
#    ignore_errors: yes
#    register: sssd1_status
#  - debug: msg="new sssd status is {{ sssd1_status.stdout }}"
#  - debug: msg="{{ sssd1_status.stdout }}"
#  - debug: msg=" domain_rejoined_correctly "
#    when: sssd_status.stdout == sssd1_status.stdout
#  - debug: msg=" domain_need_to_rejoined_correctly "
#    when: sssd_status.stdout != sssd1_status.stdout

  tags: node_install



  when: check_copy_file=="yes"
